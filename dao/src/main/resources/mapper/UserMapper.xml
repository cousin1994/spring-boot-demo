<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD com.example.Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cousin.springboot.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.cousin.springboot.model.pojo.User">
    <id column="id" jdbcType="BIGINT" property="id"/>
    <result column="user" jdbcType="VARCHAR" property="user"/>
    <result column="password" jdbcType="VARCHAR" property="password"/>
    <result column="salt" jdbcType="VARCHAR" property="salt"/>
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    <result column="email" jdbcType="VARCHAR" property="email"/>
    <result column="phone" jdbcType="VARCHAR" property="phone"/>
    <result column="name" jdbcType="VARCHAR" property="name"/>
  </resultMap>
  <sql id="Base_Column_List">
    id, user, password, salt, create_time, email, phone, name
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    DELETE FROM user
    WHERE id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.cousin.springboot.model.pojo.User">
    INSERT INTO user (id, user, password,
                      salt, create_time, email,
                      phone, name)
    VALUES (#{id,jdbcType=BIGINT}, #{user,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
            #{salt,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{email,jdbcType=VARCHAR},
            #{phone,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.cousin.springboot.model.pojo.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="user != null">
        user,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="salt != null">
        salt,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="name != null">
        name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="user != null">
        #{user,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cousin.springboot.model.pojo.User">
    update user
    <set>
      <if test="user != null">
        user = #{user,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cousin.springboot.model.pojo.User">
    UPDATE user
    SET user      = #{user,jdbcType=VARCHAR},
      password    = #{password,jdbcType=VARCHAR},
      salt        = #{salt,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      email       = #{email,jdbcType=VARCHAR},
      phone       = #{phone,jdbcType=VARCHAR},
      name        = #{name,jdbcType=VARCHAR}
    WHERE id = #{id,jdbcType=BIGINT}
  </update>
</mapper>